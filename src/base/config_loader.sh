#!/usr/bin/env bash

declare -A __SERVICE_PORTS__
declare -A __AUTHENTICATION_BACKENDS__

__SERVICE_PORTS__[postgresql]="5432"
__SERVICE_PORTS__[mysql]="3306"
__SERVICE_PORTS__[redis]="6379"
__SERVICE_PORTS__[rabbitmq]="5672"

__AUTHENTICATION_BACKENDS__[password]="airflow.contrib.auth.backends.password_auth"
__AUTHENTICATION_BACKENDS__[ldap]="airflow.contrib.auth.backends.ldap_auth"
__AUTHENTICATION_BACKENDS__[github_enterprise]="airflow.contrib.auth.backends.github_enterprise_auth"
__AUTHENTICATION_BACKENDS__[google]="airflow.contrib.auth.backends.google_auth"

function load_config() {
    if [[ "$2" != "NULL" ]]
        then
            printf "$1 = $2\n" >> "${AIRFLOW_CONF_DIR}/$3"
    fi
}

function load_config_with_opt() {
    if [[ "$2" != "NULL" ]]
        then
            printf "$1 = $3\n" >> "${AIRFLOW_CONF_DIR}/$5"
    else
        printf "$1 = $4\n" >> "${AIRFLOW_CONF_DIR}/$5"
    fi
}


printf "\n[core]\n" > "${AIRFLOW_CONF_DIR}/airflow.cfg"
load_config "dags_folder" "${AIRFLOW_HOME}/dags" "airflow.cfg"
load_config "dags_are_paused_at_creation" "${CORE_DAGS_ARE_PAUSED_AT_CREATION:=True}" "airflow.cfg"
load_config "base_log_folder" "${AIRFLOW_HOME}/logs" "airflow.cfg"
load_config "remote_logging" "${CORE_REMOTE_LOGGING:=False}" "airflow.cfg"
load_config "remote_log_conn_id" "${CORE_REMOTE_LOG_CONN_ID:=NULL}" "airflow.cfg"
load_config "remote_base_log_folder" "${CORE_REMOTE_BASE_LOG_FOLDER:=NULL}" "airflow.cfg"
load_config "encrypt_s3_logs" "${CORE_ENCRYPT_S3_LOGS:=False}" "airflow.cfg"
load_config "logging_level" "${CORE_LOGGING_LEVEL:=INFO}" "airflow.cfg"
load_config "logging_config_class" "${CORE_LOGGING_CONFIG_CLASS:=NULL}" "airflow.cfg"
load_config "fab_logging_level" "${CORE_FAB_LOGGING_LEVEL:=WARN}" "airflow.cfg"
load_config "colored_console_log" "${CORE_COLORED_CONSOLE_LOG:=True}" "airflow.cfg"
load_config "colored_log_format" "${CORE_COLORED_LOG_FORMAT:=[%%%%(blue)s%%%%(asctime)s%%%%(reset)s] {{%%%%(blue)s%%%%(filename)s:%%%%(reset)s%%%%(lineno)d\}\} %%%%(log_color)s%%%%(levelname)s%%%%(reset)s - %%%%(log_color)s%%%%(message)s%%%%(reset)s}" "airflow.cfg"
load_config "colored_formatter_class" "${CORE_COLORED_FORMATTER_CLASS:=airflow.utils.log.colored_log.CustomTTYColoredFormatter}" "airflow.cfg"
load_config "log_format" "${CORE_LOG_FORMAT:=[%%%%(asctime)s] {{%%%%(filename)s:%%%%(lineno)d\}\} %%%%(levelname)s - %%%%(message)s}" "airflow.cfg"
load_config "log_filename_template" "${CORE_LOG_FILENAME_TEMPLATE:={{ ti.dag_id \}\}/{{ ti.task_id \}\}/{{ ts \}\}/{{ try_number \}\}.log}" "airflow.cfg"
load_config "log_processor_filename_template" "${CORE_LOG_PROCESSOR_FILENAME_TEMPLATE:={{ filename \}\}.log}" "airflow.cfg"
load_config "simple_log_format" "${CORE_SIMPLE_LOG_FORMAT:=%%%%(asctime)s %%%%(levelname)s - %%%%(message)s}" "airflow.cfg"
load_config "dag_processor_manager_log_location" "${AIRFLOW_HOME}/logs/dag_processor_manager/dag_processor_manager.log" "airflow.cfg"
load_config "dag_concurrency" "${CORE_DAG_CONCURRENCY:=16}" "airflow.cfg"
load_config "dag_file_processor_timeout" "${CORE_DAG_FILE_PROCESSOR_TIMEOUT:=50}" "airflow.cfg"
load_config "dag_run_conf_overrides_params" "${CORE_DAG_RUN_CONF_OVERRIDES_PARAMS:=False}" "airflow.cfg"
load_config "dag_discovery_safe_mode" "${CORE_DAG_DISCOVERY_SAFE_MODE:=True}" "airflow.cfg"
load_config "hostname_callable" "${CORE_HOSTNAME_CALLABLE:=socket:getfqdn}" "airflow.cfg"
load_config "default_timezone" "${CORE_DEFAULT_TIMEZONE:=utc}" "airflow.cfg"
load_config "default_impersonation" "${CORE_DEFAULT_IMPERSONATION:=NULL}" "airflow.cfg"
load_config "default_task_retries" "${CORE_DEFAULT_TASK_RETRIES:=0}" "airflow.cfg"
load_config "executor" "${CORE_EXECUTOR:=SequentialExecutor}" "airflow.cfg"
load_config_with_opt "sql_alchemy_conn" "${AIRFLOW_DATABASE_PASSWORD:=NULL}" "${AIRFLOW_DATABASE_TYPE:=postgresql}://${AIRFLOW_DATABASE_USER:=NULL}:${AIRFLOW_DATABASE_PASSWORD:=NULL}@${AIRFLOW_DATABASE_HOST:=NULL}:${AIRFLOW_DATABASE_PORT:=${__SERVICE_PORTS__[${AIRFLOW_DATABASE_TYPE:=postgresql}]}}/airflow" "${AIRFLOW_DATABASE_TYPE:=postgresql}://${AIRFLOW_DATABASE_HOST:=NULL}:${AIRFLOW_DATABASE_PORT:=${__SERVICE_PORTS__[${AIRFLOW_DATABASE_TYPE:=postgresql}]}}/airflow" "airflow.cfg"
load_config "sql_alchemy_pool_enabled" "${CORE_SQL_ALCHEMY_POOL_ENABLED:=True}" "airflow.cfg"
load_config "sql_alchemy_pool_size" "${CORE_SQL_ALCHEMY_POOL_SIZE:=5}" "airflow.cfg"
load_config "sql_alchemy_pool_recycle" "${CORE_SQL_ALCHEMY_POOL_RECYCLE:=1800}" "airflow.cfg"
load_config "sql_alchemy_pool_pre_ping" "${CORE_SQL_ALCHEMY_POOL_PRE_PING:=True}" "airflow.cfg"
load_config "sql_alchemy_max_overflow" "${CORE_SQL_ALCHEMY_MAX_OVERFLOW:=10}" "airflow.cfg"
load_config "sql_alchemy_schema" "${CORE_SQL_ALCHEMY_SCHEMA:=NULL}" "airflow.cfg"
load_config "sql_engine_encoding" "${CORE_SQL_ENGINE_ENCODING:=utf-8}" "airflow.cfg"
load_config "parallelism" "${CORE_PARALLELISM:=32}" "airflow.cfg"
load_config "max_active_runs_per_dag" "${CORE_MAX_ACTIVE_RUNS_PER_DAG:=16}" "airflow.cfg"
load_config "load_examples" "${CORE_LOAD_EXAMPLES:=False}" "airflow.cfg"
load_config "plugins_folder" "${AIRFLOW_HOME}/plugins" "airflow.cfg"
load_config "fernet_key" "${CORE_FERNET_KEY:=3D5RJ24-Z3ybh91tdRlGMzbH-mk0vBnuV4W3yC1Rvvc=}" "airflow.cfg"
load_config "donot_pickle" "${CORE_DONOT_PICKLE:=False}" "airflow.cfg"
load_config "dagbag_import_timeout" "${CORE_DAGBAG_IMPORT_TIMEOUT:=30}" "airflow.cfg"
load_config "task_runner" "${CORE_TASK_RUNNER:=StandardTaskRunner}" "airflow.cfg"
load_config "task_log_reader" "${CORE_TASK_LOG_READER:=task}" "airflow.cfg"
load_config "security" "${CORE_SECURITY:=NULL}" "airflow.cfg"
load_config "secure_mode" "${CORE_SECURE_MODE:=False}" "airflow.cfg"
load_config "unit_test_mode" "${CORE_UNIT_TEST_MODE:=False}" "airflow.cfg"
load_config "enable_xcom_pickling" "${CORE_ENABLE_XCOM_PICKLING:=True}" "airflow.cfg"
load_config "killed_task_cleanup_time" "${CORE_KILLED_TASK_CLEANUP_TIME:=60}" "airflow.cfg"
load_config "worker_precheck" "${CORE_WORKER_PRECHECK:=False}" "airflow.cfg"

printf "\n[cli]\n" >> "${AIRFLOW_CONF_DIR}/airflow.cfg"
load_config "api_client" "${CLI_API_CLIENT:=airflow.api.client.local_client}" "airflow.cfg"
load_config "endpoint_url" "${CLI_ENDPOINT_URL:=http://localhost:8080}" "airflow.cfg"

printf "\n[api]\n" >> "${AIRFLOW_CONF_DIR}/airflow.cfg"
load_config "auth_backend" "${API_AUTH_BACKEND:=airflow.api.auth.backend.default}" "airflow.cfg"

printf "\n[lineage]\n" >> "${AIRFLOW_CONF_DIR}/airflow.cfg"
load_config "backend" "${LINEAGE_BACKEND:=}" "airflow.cfg"

printf "\n[atlas]\n" >> "${AIRFLOW_CONF_DIR}/airflow.cfg"
load_config "sasl_enabled" "${ATLAS_SASL_ENABLED:=False}" "airflow.cfg"
load_config "host" "${ATLAS_HOST:=NULL}" "airflow.cfg"
load_config "port" "${ATLAS_PORT:=21000}" "airflow.cfg"
load_config "username" "${ATLAS_USERNAME:=NULL}" "airflow.cfg"
load_config "password" "${ATLAS_PASSWORD:=NULL}" "airflow.cfg"

printf "\n[operators]\n" >> "${AIRFLOW_CONF_DIR}/airflow.cfg"
load_config "default_owner" "${OPERATORS_DEFAULT_OWNER:=airflow}" "airflow.cfg"
load_config "default_cpus" "${OPERATORS_DEFAULT_CPUS:=1}" "airflow.cfg"
load_config "default_ram" "${OPERATORS_DEFAULT_RAM:=512}" "airflow.cfg"
load_config "default_disk" "${OPERATORS_DEFAULT_DISK:=612}" "airflow.cfg"
load_config "default_gpus" "${OPERATORS_DEFAULT_GPUS:=0}" "airflow.cfg"

printf "\n[hive]\n" >> "${AIRFLOW_CONF_DIR}/airflow.cfg"
load_config "default_hive_mapred_queue" "${HIVE_DEFAULT_HIVE_MAPRED_QUEUE:=NULL}" "airflow.cfg"

printf "\n[webserver]\n" >> "${AIRFLOW_CONF_DIR}/airflow.cfg"
load_config "base_url" "${WEBSERVER_BASE_URL:=http://localhost:8080}" "airflow.cfg"
load_config "web_server_host" "${WEBSERVER_WEB_SERVER_HOST:=0.0.0.0}" "airflow.cfg"
load_config "web_server_port" "${WEBSERVER_WEB_SERVER_PORT:=8080}" "airflow.cfg"
load_config "web_server_ssl_cert" "${WEBSERVER_WEB_SERVER_SSL_CERT:=NULL}" "airflow.cfg"
load_config "web_server_ssl_key" "${WEBSERVER_WEB_SERVER_SSL_KEY:=NULL}" "airflow.cfg"
load_config "web_server_master_timeout" "${WEBSERVER_WEB_SERVER_MASTER_TIMEOUT:=120}" "airflow.cfg"
load_config "web_server_worker_timeout" "${WEBSERVER_WEB_SERVER_WORKER_TIMEOUT:=120}" "airflow.cfg"
load_config "worker_refresh_batch_size" "${WEBSERVER_WORKER_REFRESH_BATCH_SIZE:=1}" "airflow.cfg"
load_config "worker_refresh_interval" "${WEBSERVER_WORKER_REFRESH_INTERVAL:=30}" "airflow.cfg"
load_config "worker_class" "${WEBSERVER_WORKER_CLASS:=sync}" "airflow.cfg"
load_config "secret_key" "${WEBSERVER_SECRET_KEY:=temporary_key}" "airflow.cfg"
load_config "workers" "${WEBSERVER_WORKERS:=4}" "airflow.cfg"
load_config "access_logfile" "${WEBSERVER_ACCESS_LOGFILE:=-}" "airflow.cfg"
load_config "error_logfile" "${WEBSERVER_ERROR_LOGFILE:=-}" "airflow.cfg"
load_config "expose_config" "${WEBSERVER_EXPOSE_CONFIG:=False}" "airflow.cfg"
load_config "authenticate" "${WEBSERVER_AUTHENTICATE:=False}" "airflow.cfg"
load_config "auth_backend" "${__AUTHENTICATION_BACKENDS__[${AIRFLOW_WEBSERVER_AUTH_BACKEND_TYPE:=password}]}" "airflow.cfg"
load_config "filter_by_owner" "${WEBSERVER_FILTER_BY_OWNER:=False}" "airflow.cfg"
load_config "owner_mode" "${WEBSERVER_OWNER_MODE:=user}" "airflow.cfg"
load_config "dag_default_view" "${WEBSERVER_DAG_DEFAULT_VIEW:=tree}" "airflow.cfg"
load_config "dag_orientation" "${WEBSERVER_DAG_ORIENTATION:=LR}" "airflow.cfg"
load_config "demo_mode" "${WEBSERVER_DEMO_MODE:=False}" "airflow.cfg"
load_config "log_fetch_timeout_sec" "${WEBSERVER_LOG_FETCH_TIMEOUT_SEC:=5}" "airflow.cfg"
load_config "hide_paused_dags_by_default" "${WEBSERVER_HIDE_PAUSED_DAGS_BY_DEFAULT:=False}" "airflow.cfg"
load_config "page_size" "${WEBSERVER_PAGE_SIZE:=100}" "airflow.cfg"
load_config "rbac" "${WEBSERVER_RBAC:=False}" "airflow.cfg"
load_config "navbar_color" "${WEBSERVER_NAVBAR_COLOR:=#007A87}" "airflow.cfg"
load_config "default_dag_run_display_number" "${WEBSERVER_DEFAULT_DAG_RUN_DISPLAY_NUMBER:=25}" "airflow.cfg"
load_config "default_wrap" "${WEBSERVER_DEFAULT_WRAP:=False}" "airflow.cfg"
load_config "enable_proxy_fix" "${WEBSERVER_ENABLE_PROXY_FIX:=False}" "airflow.cfg"
load_config "cookie_secure" "${WEBSERVER_COOKIE_SECURE:=False}" "airflow.cfg"
load_config "cookie_samesite" "${WEBSERVER_COOKIE_SAMESITE:=NULL}" "airflow.cfg"

printf "\n[email]\n" >> "${AIRFLOW_CONF_DIR}/airflow.cfg"
load_config "email_backend" "${EMAIL_EMAIL_BACKEND:=airflow.utils.email.send_email_smtp}" "airflow.cfg"

printf "\n[smtp]\n" >> "${AIRFLOW_CONF_DIR}/airflow.cfg"
load_config "smtp_host" "${SMTP_SMTP_HOST:=localhost}" "airflow.cfg"
load_config "smtp_starttls" "${SMTP_SMTP_STARTTLS:=True}" "airflow.cfg"
load_config "smtp_ssl" "${SMTP_SMTP_SSL:=False}" "airflow.cfg"
load_config "smtp_user" "${SMTP_SMTP_USER:=airflow}" "airflow.cfg"
load_config "smtp_password" "${SMTP_SMTP_PASSWORD:=airflow}" "airflow.cfg"
load_config "smtp_port" "${SMTP_SMTP_PORT:=25}" "airflow.cfg"
load_config "smtp_mail_from" "${SMTP_SMTP_MAIL_FROM:=airflow@example.com}" "airflow.cfg"

printf "\n[sentry]\n" >> "${AIRFLOW_CONF_DIR}/airflow.cfg"
load_config "sentry_dsn" "${SENTRY_SENTRY_DSN:=NULL}" "airflow.cfg"

printf "\n[celery]\n" >> "${AIRFLOW_CONF_DIR}/airflow.cfg"
load_config "celery_app_name" "${CELERY_CELERY_APP_NAME:=airflow.executors.celery_executor}" "airflow.cfg"
load_config "celery_config_options" "${CELERY_CELERY_CONFIG_OPTIONS:=airflow.config_templates.default_celery.DEFAULT_CELERY_CONFIG}" "airflow.cfg"
load_config "worker_concurrency" "${CELERY_WORKER_CONCURRENCY:=16}" "airflow.cfg"
load_config "worker_log_server_port" "${CELERY_WORKER_LOG_SERVER_PORT:=8793}" "airflow.cfg"
load_config_with_opt "broker_url" "${AIRFLOW_BROKER_PASSWORD:=NULL}" "${AIRFLOW_BROKER_TYPE:=redis}://${AIRFLOW_BROKER_USER:=NULL}:${AIRFLOW_BROKER_PASSWORD:=NULL}@${AIRFLOW_BROKER_HOST:=NULL}:${AIRFLOW_BROKER_PORT:=${__SERVICE_PORTS__[${AIRFLOW_BROKER_TYPE:=redis}]}}/0" "${AIRFLOW_BROKER_TYPE:=redis}://${AIRFLOW_BROKER_HOST:=NULL}:${AIRFLOW_BROKER_PORT:=${__SERVICE_PORTS__[${AIRFLOW_BROKER_TYPE:=redis}]}}/0" "airflow.cfg"
load_config_with_opt "result_backend" "${AIRFLOW_BROKER_RESULT_BACKEND_PASSWORD:=NULL}" "db+${AIRFLOW_BROKER_RESULT_BACKEND_TYPE:=postgresql}://${AIRFLOW_BROKER_RESULT_BACKEND_USER:=NULL}:${AIRFLOW_BROKER_RESULT_BACKEND_PASSWORD:=NULL}@${AIRFLOW_BROKER_RESULT_BACKEND_HOST:=NULL}:${AIRFLOW_BROKER_RESULT_BACKEND_PORT:=${__SERVICE_PORTS__[${AIRFLOW_BROKER_RESULT_BACKEND_TYPE:=postgresql}]}}/airflow" "db+${AIRFLOW_BROKER_RESULT_BACKEND_TYPE:=postgresql}://${AIRFLOW_BROKER_RESULT_BACKEND_HOST:=NULL}:${AIRFLOW_BROKER_RESULT_BACKEND_PORT:=${__SERVICE_PORTS__[${AIRFLOW_BROKER_RESULT_BACKEND_TYPE:=postgresql}]}}/airflow" "airflow.cfg"
load_config "flower_host" "${CELERY_FLOWER_HOST:=0.0.0.0}" "airflow.cfg"
load_config "flower_url_prefix" "${CELERY_FLOWER_URL_PREFIX:=NULL}" "airflow.cfg"
load_config "flower_port" "${CELERY_FLOWER_PORT:=5555}" "airflow.cfg"
load_config "flower_basic_auth" "${CELERY_FLOWER_BASIC_AUTH:=NULL}" "airflow.cfg"
load_config "default_queue" "${CELERY_DEFAULT_QUEUE:=default}" "airflow.cfg"
load_config "sync_parallelism" "${CELERY_SYNC_PARALLELISM:=0}" "airflow.cfg"
load_config "ssl_active" "${CELERY_SSL_ACTIVE:=False}" "airflow.cfg"
load_config "ssl_key" "${CELERY_SSL_KEY:=NULL}" "airflow.cfg"
load_config "ssl_cert" "${CELERY_SSL_CERT:=NULL}" "airflow.cfg"
load_config "ssl_cacert" "${CELERY_SSL_CACERT:=NULL}" "airflow.cfg"
load_config "pool" "${CELERY_POOL:=prefork}" "airflow.cfg"

printf "\n[dask]\n" >> "${AIRFLOW_CONF_DIR}/airflow.cfg"
load_config "cluster_address" "${DASK_CLUSTER_ADDRESS:=127.0.0.1:8766}" "airflow.cfg"
load_config "tls_ca" "${DASK_TLS_CA:=NULL}" "airflow.cfg"
load_config "tls_cert" "${DASK_TLS_CERT:=NULL}" "airflow.cfg"
load_config "tls_key" "${DASK_TLS_KEY:=NULL}" "airflow.cfg"

printf "\n[scheduler]\n" >> "${AIRFLOW_CONF_DIR}/airflow.cfg"
load_config "job_heartbeat_sec" "${SCHEDULER_JOB_HEARTBEAT_SEC:=5}" "airflow.cfg"
load_config "scheduler_heartbeat_sec" "${SCHEDULER_SCHEDULER_HEARTBEAT_SEC:=5}" "airflow.cfg"
load_config "scheduler_health_check_threshold" "${SCHEDULER_SCHEDULER_HEALTH_CHECK_THRESHOLD:=30}" "airflow.cfg"
load_config "scheduler_zombie_task_threshold" "${SCHEDULER_SCHEDULER_ZOMBIE_TASK_THRESHOLD:=300}" "airflow.cfg"
load_config "run_duration" "${SCHEDULER_RUN_DURATION:=-1}" "airflow.cfg"
load_config "num_runs" "${SCHEDULER_NUM_RUNS:=-1}" "airflow.cfg"
load_config "processor_poll_interval" "${SCHEDULER_PROCESSOR_POLL_INTERVAL:=1}" "airflow.cfg"
load_config "min_file_process_interval" "${SCHEDULER_MIN_FILE_PROCESS_INTERVAL:=0}" "airflow.cfg"
load_config "dag_dir_list_interval" "${SCHEDULER_DAG_DIR_LIST_INTERVAL:=300}" "airflow.cfg"
load_config "print_stats_interval" "${SCHEDULER_PRINT_STATS_INTERVAL:=30}" "airflow.cfg"
load_config "child_process_log_directory" "${AIRFLOW_HOME}/logs/scheduler" "airflow.cfg"
load_config "catchup_by_default" "${SCHEDULER_CATCHUP_BY_DEFAULT:=True}" "airflow.cfg"
load_config "max_tis_per_query" "${SCHEDULER_MAX_TIS_PER_QUERY:=512}" "airflow.cfg"
load_config "max_threads" "${SCHEDULER_MAX_THREADS:=2}" "airflow.cfg"
load_config "statsd_on" "${SCHEDULER_STATSD_ON:=False}" "airflow.cfg"
load_config "statsd_host" "${SCHEDULER_STATSD_HOST:=localhost}" "airflow.cfg"
load_config "statsd_port" "${SCHEDULER_STATSD_PORT:=8125}" "airflow.cfg"
load_config "statsd_prefix" "${SCHEDULER_STATSD_PREFIX:=airflow}" "airflow.cfg"
load_config "statsd_allow_list" "${SCHEDULER_STATSD_ALLOW_LIST:=NULL}" "airflow.cfg"
load_config "authenticate" "${SCHEDULER_AUTHENTICATE:=False}" "airflow.cfg"
load_config "use_job_schedule" "${SCHEDULER_USE_JOB_SCHEDULE:=True}" "airflow.cfg"

printf "\n[ldap]\n" >> "${AIRFLOW_CONF_DIR}/airflow.cfg"
load_config "uri" "${LDAP_URI:=NULL}" "airflow.cfg"
load_config "user_filter" "${LDAP_USER_FILTER:=objectClass=*}" "airflow.cfg"
load_config "user_name_attr" "${LDAP_USER_NAME_ATTR:=uid}" "airflow.cfg"
load_config "group_member_attr" "${LDAP_GROUP_MEMBER_ATTR:=memberOf}" "airflow.cfg"
load_config "superuser_filter" "${LDAP_SUPERUSER_FILTER:=NULL}" "airflow.cfg"
load_config "data_profiler_filter" "${LDAP_DATA_PROFILER_FILTER:=NULL}" "airflow.cfg"
load_config "bind_user" "${LDAP_BIND_USER:=cn=Manager,dc=example,dc=com}" "airflow.cfg"
load_config "bind_password" "${LDAP_BIND_PASSWORD:=insecure}" "airflow.cfg"
load_config "basedn" "${LDAP_BASEDN:=dc=example,dc=com}" "airflow.cfg"
load_config "cacert" "${LDAP_CACERT:=/etc/ca/ldap_ca.crt}" "airflow.cfg"
load_config "search_scope" "${LDAP_SEARCH_SCOPE:=LEVEL}" "airflow.cfg"
load_config "ignore_malformed_schema" "${LDAP_IGNORE_MALFORMED_SCHEMA:=False}" "airflow.cfg"

printf "\n[mesos]\n" >> "${AIRFLOW_CONF_DIR}/airflow.cfg"
load_config "master" "${MESOS_MASTER:=localhost:5050}" "airflow.cfg"
load_config "framework_name" "${MESOS_FRAMEWORK_NAME:=Airflow}" "airflow.cfg"
load_config "task_cpu" "${MESOS_TASK_CPU:=1}" "airflow.cfg"
load_config "task_memory" "${MESOS_TASK_MEMORY:=256}" "airflow.cfg"
load_config "checkpoint" "${MESOS_CHECKPOINT:=False}" "airflow.cfg"
load_config "authenticate" "${MESOS_AUTHENTICATE:=False}" "airflow.cfg"

printf "\n[kerberos]\n" >> "${AIRFLOW_CONF_DIR}/airflow.cfg"
load_config "ccache" "${KERBEROS_CCACHE:=/tmp/airflow_krb5_ccache}" "airflow.cfg"
load_config "principal" "${KERBEROS_PRINCIPAL:=airflow}" "airflow.cfg"
load_config "reinit_frequency" "${KERBEROS_REINIT_FREQUENCY:=3600}" "airflow.cfg"
load_config "kinit_path" "${KERBEROS_KINIT_PATH:=kinit}" "airflow.cfg"
load_config "keytab" "${KERBEROS_KEYTAB:=airflow.keytab}" "airflow.cfg"

printf "\n[github_enterprise]\n" >> "${AIRFLOW_CONF_DIR}/airflow.cfg"
load_config "api_rev" "${GITHUB_ENTERPRISE_API_REV:=v3}" "airflow.cfg"
load_config "host" "${GITHUB_ENTERPRISE_HOST:=NULL}" "airflow.cfg"
load_config "client_id" "${GITHUB_ENTERPRISE_CLIENT_ID:=NULL}" "airflow.cfg"
load_config "client_secret" "${GITHUB_ENTERPRISE_CLIENT_SECRET:=NULL}" "airflow.cfg"
load_config "oauth_callback_route" "${GITHUB_ENTERPRISE_OAUTH_CALLBACK_ROUTE:=NULL}" "airflow.cfg"
load_config "allowed_teams" "${GITHUB_ENTERPRISE_ALLOWED_TEAMS:=NULL}" "airflow.cfg"

printf "\n[google]\n" >> "${AIRFLOW_CONF_DIR}/airflow.cfg"
load_config "client_id" "${GOOGLE_CLIENT_ID:=NULL}" "airflow.cfg"
load_config "client_secret" "${GOOGLE_CLIENT_SECRET:=NULL}" "airflow.cfg"
load_config "oauth_callback_route" "${GOOGLE_OAUTH_CALLBACK_ROUTE:=NULL}" "airflow.cfg"
load_config "domain" "${GOOGLE_DOMAIN:=NULL}" "airflow.cfg"

printf "\n[admin]\n" >> "${AIRFLOW_CONF_DIR}/airflow.cfg"
load_config "hide_sensitive_variable_fields" "${ADMIN_HIDE_SENSITIVE_VARIABLE_FIELDS:=True}" "airflow.cfg"

printf "\n[elasticsearch]\n" >> "${AIRFLOW_CONF_DIR}/airflow.cfg"
load_config "host" "${ELASTICSEARCH_HOST:=NULL}" "airflow.cfg"
load_config "log_id_template" "${ELASTICSEARCH_LOG_ID_TEMPLATE:={dag_id\}-{task_id\}-{execution_date\}-{try_number\}}" "airflow.cfg"
load_config "end_of_log_mark" "${ELASTICSEARCH_END_OF_LOG_MARK:=end_of_log}" "airflow.cfg"
load_config "frontend" "${ELASTICSEARCH_FRONTEND:=NULL}" "airflow.cfg"
load_config "write_stdout" "${ELASTICSEARCH_WRITE_STDOUT:=False}" "airflow.cfg"
load_config "json_format" "${ELASTICSEARCH_JSON_FORMAT:=False}" "airflow.cfg"
load_config "json_fields" "${ELASTICSEARCH_JSON_FIELDS:=asctime, filename, lineno, levelname, message}" "airflow.cfg"

printf "\n[elasticsearch_configs]\n" >> "${AIRFLOW_CONF_DIR}/airflow.cfg"
load_config "use_ssl" "${ELASTICSEARCH_CONFIGS_USE_SSL:=False}" "airflow.cfg"
load_config "verify_certs" "${ELASTICSEARCH_CONFIGS_VERIFY_CERTS:=True}" "airflow.cfg"

printf "\n[kubernetes]\n" >> "${AIRFLOW_CONF_DIR}/airflow.cfg"
load_config "worker_container_repository" "${KUBERNETES_WORKER_CONTAINER_REPOSITORY:=NULL}" "airflow.cfg"
load_config "worker_container_tag" "${KUBERNETES_WORKER_CONTAINER_TAG:=NULL}" "airflow.cfg"
load_config "worker_container_image_pull_policy" "${KUBERNETES_WORKER_CONTAINER_IMAGE_PULL_POLICY:=IfNotPresent}" "airflow.cfg"
load_config "worker_pods_creation_batch_size" "${KUBERNETES_WORKER_PODS_CREATION_BATCH_SIZE:=1}" "airflow.cfg"
load_config "worker_service_account_name" "${KUBERNETES_WORKER_SERVICE_ACCOUNT_NAME:=NULL}" "airflow.cfg"
load_config "delete_worker_pods" "${KUBERNETES_DELETE_WORKER_PODS:=True}" "airflow.cfg"
load_config "namespace" "${KUBERNETES_NAMESPACE:=default}" "airflow.cfg"
load_config "airflow_configmap" "${KUBERNETES_AIRFLOW_CONFIGMAP:=NULL}" "airflow.cfg"
load_config "dags_in_image" "${KUBERNETES_DAGS_IN_IMAGE:=False}" "airflow.cfg"
load_config "dags_volume_subpath" "${KUBERNETES_DAGS_VOLUME_SUBPATH:=NULL}" "airflow.cfg"
load_config "dags_volume_claim" "${KUBERNETES_DAGS_VOLUME_CLAIM:=NULL}" "airflow.cfg"
load_config "dags_volume_host" "${KUBERNETES_DAGS_VOLUME_HOST:=NULL}" "airflow.cfg"
load_config "logs_volume_subpath" "${KUBERNETES_LOGS_VOLUME_SUBPATH:=NULL}" "airflow.cfg"
load_config "logs_volume_claim" "${KUBERNETES_LOGS_VOLUME_CLAIM:=NULL}" "airflow.cfg"
load_config "logs_volume_host" "${KUBERNETES_LOGS_VOLUME_HOST:=NULL}" "airflow.cfg"
load_config "env_from_configmap_ref" "${KUBERNETES_ENV_FROM_CONFIGMAP_REF:=NULL}" "airflow.cfg"
load_config "env_from_secret_ref" "${KUBERNETES_ENV_FROM_SECRET_REF:=NULL}" "airflow.cfg"
load_config "git_repo" "${KUBERNETES_GIT_REPO:=NULL}" "airflow.cfg"
load_config "git_branch" "${KUBERNETES_GIT_BRANCH:=NULL}" "airflow.cfg"
load_config "git_subpath" "${KUBERNETES_GIT_SUBPATH:=NULL}" "airflow.cfg"
load_config "git_user" "${KUBERNETES_GIT_USER:=NULL}" "airflow.cfg"
load_config "git_password" "${KUBERNETES_GIT_PASSWORD:=NULL}" "airflow.cfg"
load_config "git_sync_root" "${KUBERNETES_GIT_SYNC_ROOT:=/git}" "airflow.cfg"
load_config "git_sync_dest" "${KUBERNETES_GIT_SYNC_DEST:=repo}" "airflow.cfg"
load_config "git_sync_credentials_secret" "${KUBERNETES_GIT_SYNC_CREDENTIALS_SECRET:=NULL}" "airflow.cfg"
load_config "git_sync_container_repository" "${KUBERNETES_GIT_SYNC_CONTAINER_REPOSITORY:=k8s.gcr.io/git-sync}" "airflow.cfg"
load_config "git_sync_container_tag" "${KUBERNETES_GIT_SYNC_CONTAINER_TAG:=v3.1.1}" "airflow.cfg"
load_config "git_sync_init_container_name" "${KUBERNETES_GIT_SYNC_INIT_CONTAINER_NAME:=git-sync-clone}" "airflow.cfg"
load_config "git_sync_run_as_user" "${KUBERNETES_GIT_SYNC_RUN_AS_USER:=65535}" "airflow.cfg"
load_config "git_dags_folder_mount_point" "${KUBERNETES_GIT_DAGS_FOLDER_MOUNT_POINT:=NULL}" "airflow.cfg"
load_config "git_ssh_key_secret_name" "${KUBERNETES_GIT_SSH_KEY_SECRET_NAME:=NULL}" "airflow.cfg"
load_config "git_ssh_known_hosts_configmap_name" "${KUBERNETES_GIT_SSH_KNOWN_HOSTS_CONFIGMAP_NAME:=NULL}" "airflow.cfg"
load_config "image_pull_secrets" "${KUBERNETES_IMAGE_PULL_SECRETS:=NULL}" "airflow.cfg"
load_config "gcp_service_account_keys" "${KUBERNETES_GCP_SERVICE_ACCOUNT_KEYS:=NULL}" "airflow.cfg"
load_config "in_cluster" "${KUBERNETES_IN_CLUSTER:=True}" "airflow.cfg"
load_config "affinity" "${KUBERNETES_AFFINITY:=NULL}" "airflow.cfg"
load_config "tolerations" "${KUBERNETES_TOLERATIONS:=NULL}" "airflow.cfg"
load_config "kube_client_request_args" "${KUBERNETES_KUBE_CLIENT_REQUEST_ARGS:={\"_request_timeout\" : [60,60] }}" "airflow.cfg"
load_config "run_as_user" "${KUBERNETES_RUN_AS_USER:=NULL}" "airflow.cfg"
load_config "fs_group" "${KUBERNETES_FS_GROUP:=NULL}" "airflow.cfg"
